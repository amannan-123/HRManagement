@model HRManagement.Models.EmployeeViewModel

@{
	ViewData["Title"] = "Index";
}

<div class="mb-2 d-flex flex-row flex-nowrap justify-content-between align-items-center">
	<h1>Employees</h1>
	<a asp-action="Add" class="btn btn-primary">
		<i class="fas fa-plus text-white p-2"></i>
	</a>
</div>

<div>

	@if (Model.Employees.Count < 1)
	{
		<ul class="list-group">
			<li class="list-group-item list-group-item-action text-center list-group-item-secondary">
				<h3>No Employees found!</h3>
			</li>
		</ul>
	}
	else
	{
		<div class="row">
			<div class="col-12 custom-table table-wide">
				<div class="table-responsive">
					<table class="table table-dark table-bordered block-width">
						<thead>
							<tr>
								<th>
									<span>Employee Code</span>
								</th>
								<th>
									<span>Employee Name</span>
								</th>
								<th>
									<span>Email</span>
								</th>
								<th>
									<span>Joining Date</span>
								</th>
								<th>
									<span>Action</span>
								</th>
							</tr>
						</thead>
						<tbody>
							@foreach (Employee item in Model.Employees)
							{
								<tr class="emprow">
									<td>
										<span>@item.EmployeeCode</span>
										<input type="hidden" class="hidden empid" value="@item.EmployeeCode" />
									</td>
									<td>
										<span>@item.EmployeeName</span>
									</td>
									<td>
										<span>@item.Email</span>
									</td>
									<td>
										<span>@item.JoinDate.ToString("D")</span>
									</td>
									<td>
										<div>
											<a class="btn btn-info" asp-route-id="@item.Id" asp-action="View">
												<i class="fas fa-eye text-white p-1"></i>
											</a>
											<a class="btn btn-info" asp-route-id="@item.Id" asp-action="Edit">
												<i class="fas fa-edit text-white p-1"></i>
											</a>
											<a class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" name="openDelete">
												<i class="fas fa-trash text-white p-1"></i>
												<input type="text" name="empId" value="@item.Id" hidden />
												<input type="text" name="empName" value="@item.EmployeeName" hidden />
											</a>
										</div>
									</td>
								</tr>
							}

						</tbody>
					</table>
				</div>
			</div>
		</div>

		//show pages
		<div class="mt-2">
			<div class="d-flex align-items-center flex-wrap justify-content-between">
				<ul class="pagination m-0 p-0">
					<li class="page-item">
						<button class="page-link pager" type="submit" value="first" disabled="@(Model.CurrentPage==1)">
							<span>&laquo;</span>
						</button>
					</li>

					@for (int i = 1; i <= Model.TotalPages; i++)
					{
						@if (Model.CurrentPage == i)
						{
							<li class="page-item active">
								<span class="page-link">@i</span>
							</li>
						}
						else
						{
							<li class="page-item">
								<button class="page-link pager" type="submit" value=@i>
									<span>@i</span>
								</button>
							</li>
						}
					}

					<li class="page-item">
						<button class="page-link pager" type="submit" value="last" disabled="@(Model.CurrentPage==Model.TotalPages)">
							<span>&raquo;</span>
						</button>
					</li>
				</ul>

				@if (Model.RowLength == 1)
				{
					<label class="m-0 p-0">Showing record number @(Model.CurrentPage)</label>
				}
				else
				{
					<label class="m-0 p-0">Showing records @(((Model.CurrentPage - 1) * Model.RowLength) + 1) to @(Model.CurrentPage * Model.RowLength)</label>
				}

				<div class="d-flex align-items-center justify-content-center m-0 p-0 gap-2">
					<label class="m-0 p-0">Items:</label>
					<select class="form-select sizer" name="rowlength" asp-for="RowLength">
						<option value="1">1</option>
						<option value="3">3</option>
						<option value="10">10</option>
						<option value="50">50</option>
					</select>
				</div>
			</div>
		</div>

	}

</div>


@*Delete Modal*@
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-body">
				<div class="row">
					<div class="col-md-12 mb-1">
						<div class="card border-left-danger shadow h-100 py-2">
							<div class="card-body py-1">
								<div class="row no-gutters align-items-center">
									<div class="col mr-2">
										<p class="text-dark">Really! You want to delete this Employee?</p>
										<p class="text-dark" id="empDelId" hidden></p>
										<p class="text-dark" id="empDelName"></p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="card-footer py-3">
				<button type="button" class="btn btn-danger float-right" id="deleteEmployee">Delete</button>
				<button type="button" class="btn btn-secondary float-right mr-2" data-bs-dismiss="modal">Cancel</button>
			</div>
		</div>
	</div>
</div>

@section Scripts{

	<script>
		//get jquery intellisense
		/// <reference path="../../wwwroot/lib/jquery/dist/jquery.js" />

		$(document).ready(function () {

			$('button.pager').on('click', function () {
				var text = $(this).val();
				var urlParams = new URLSearchParams(window.location.search);
				urlParams.set('page', text);
				window.location.search = urlParams.toString();
			})

			$('select.sizer').on('change', function () {
				var text = $(this).val();
				var urlParams = new URLSearchParams(window.location.search);
				urlParams.set('rowlength', text);
				urlParams.set('page', 'first');
				window.location.search = urlParams.toString();
			})

			$("a[name='openDelete']").click(function () {
				var EmployeeId = $(this).children("input[name='empId']").val();
				var EmployeeName = $(this).children("input[name='empName']").val();
				$("#empDelId").text(EmployeeId);
				$("#empDelName").text(EmployeeName);
			});

			$("#deleteEmployee").click(function () {
				var EmployeeId = $("#empDelId").text();
				$.ajax({
					url: "Employee/Delete",
					type: "POST",
					dataType: "JSON",
					data: { "id": EmployeeId },
					cache: false,
					beforeSend: function () {
						$("button[data-bs-dismiss='modal']").trigger("click");
					},
					success: function () {
						location.reload();
					},
					error: function (error) {
						console.log(error);
					}
				});
			});

		})

	</script>
}